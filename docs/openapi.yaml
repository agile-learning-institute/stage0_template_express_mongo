openapi: 3.0.3
info:
  title: "{{service.name}} API"
  description: |-
    This is a super simple API for managing {{service.name}}s
  contact:
    email: "devs@{{arch.organization}}"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

paths:

{% for source in service.data.sources -%}
  /api/{{source.name}}/:
    get:
      summary: Get a list of {{source.name}}'s names and ids
      operationId: get_{{source.name}}
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/{{source.name}}"
        "500":
          description: An error has occurred 
    post:
      summary: "Add a new {{source.name}}"
      operationId: "add{{source.name}}"
      requestBody:
        description: "{{source.name}} details to be added"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/{{source.name}}"
              required: true
      responses:
        "200":
          description: "{{source.name}} added successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/{{source.name}}"
        "500":
          description: An error has occurred 

  /api/{{source.name}}/{{{source.name}}Id}/:
    get:
      summary: "Get an existing {{source.name}} by ID"
      operationId: "get{{source.name}}ById"
      parameters:
        - name: "{{source.name}}Id"
          in: path
          description: The ID of the {{service.name}} to retrieve
          required: true
          schema:
            type: string
            format: GUID
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/{{source.name}}"
        "500":
          description: An error has occurred 
    patch:
      summary: Update a {{source.name}} by ID
      operationId: update{{source.name}}
      parameters:
        - name: "{{source.name}}Id"
          in: path
          description: "The ID of the {{source.name}} to update"
          required: true
          schema:
            type: string
            format: GUID
      requestBody:
        description: "updated {{source.name}} details"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/{{source.name}}"
        required: true
      responses:
        "200":
          description: "{{source.name}} updated successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/{{source.name}}"
        "500":
          description: An error has occurred 
{% endfor %}

{% for source in service.data.sinks -%}
  /api/{{service.name}}/:
    get:
      summary: Get a list of {{service.name}} 
      operationId: get{{service.name}}
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: The string to search for
          required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/{{service.name}}"
        "500":
          description: An error has occurred 
{% endfor %}

  /api/config/:
    get:
      summary: Get API Configuration Information
      operationId: getConfig
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/config"

  /api/health/:
    get:
      summary: Prometheus Healthcheck endpoint
      operationId: getHealth
      responses:
        "200":
          description: Successful operation

components:
  schemas:
{% for source in service.data.sources -%}
    {{service.name}}:
      {{service.schema}}
{% endfor %}

{% for source in service.data.sinks -%}
    {{service.name}}:
      {{service.schema}}
{% endfor %}

    config:
      type: object
      properties:
        configItems:
          type: array
          items:
            type: object
            properties:
              name:
                description: Conf Item Name (Env Var Name, File Name)
                type: string
              value:
                description: The value for that config item
                type: string
              from:
                description: Where the value was found
                type: string
                enum:
                  - default
                  - environment
                  - file
        versions:
          type: array
          items:
            type: object
            properties:
              collectionName:
                description: Mongodb Collection name
                type: string
              currentVersion:
                description: Schema Version for the collection
                type: string
        enumerators:
          type: object
        mentors:
          description: List of all members with role Mentor
          type: array
          items:
            type: object
